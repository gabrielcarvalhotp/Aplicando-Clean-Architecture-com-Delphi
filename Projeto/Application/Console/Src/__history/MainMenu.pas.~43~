unit MainMenu;

interface

procedure Menu;

procedure CallClientsMenu;

procedure CallVehiclesMenu;

procedure CallLocationsMenu;

type
  TModelType = (mtNull, mtClients, mtVehicles, mtLocations);
  TOptionsCrud = (ocNull, ocCreate, ocRead, ocUpdate, ocDelete, ocExit);

const OPTIONS_CRUD = ' 1 - Cadastrar ' + #13#10 +
                     ' 2 - Consultar ' + #13#10 +
                     ' 3 - Alterar  ' + #13#10 +
                     ' 4 - Excluir ' + #13#10 +
                     ' 5 - Voltar ';

implementation

uses
  Winapi.Windows,
  Utils.Console,
  ClientMenu,
  VehiclesMenu;

procedure Menu;
var
  LModelType: Integer;
  LModules: string;
begin
  CleanConsole;
  Writeln('Menu Principal');
  Writeln;
  LModules := '1 - Clientes' + #13#10 +
              '2 - Veículos' + #13#10 +
              '3 - Locações';
  Writeln(LModules);
  Write(Output, 'Opção: ');
  Readln(Input, LModelType);

  case TModelType(LModelType) of
    mtClients: CallClientsMenu;
    mtVehicles: CallVehiclesMenu;
    mtLocations: CallLocationsMenu;
  end;
end;

procedure CallClientsMenu;
var
  LOption: Integer;
begin
  CleanConsole;
  Writeln('Menu Clientes');
  Writeln(OPTIONS_CRUD);
  Write(Output, 'Opção: ');
  Readln(Input, LOption);

  case TOptionsCrud(LOption) of
    ocCreate: CreateClient;
    ocRead: GetClient;
    ocUpdate: UpdateClient;
    ocDelete: DeleteClient;
    ocExit: Menu;
    else
    begin
      writeln('Opção inválida');
      readln;
    end;
  end;
  Sleep(2000);
end;

procedure CallVehiclesMenu;
var
  LOption: Integer;
begin
  CleanConsole;
  Writeln('Menu Veículos');
  Writeln(OPTIONS_CRUD);
  Write(Output, 'Opção: ');
  Readln(Input, LOption);

  case TOptionsCrud(LOption) of
    ocCreate: ;
    ocRead: ;
    ocUpdate: ;
    ocDelete: ;
    ocExit: Menu;
    else
    begin
      writeln('Opção inválida');
      readln;
    end;
  end;
  Sleep(2000);
end;

procedure CallLocationsMenu;
var
  LOption: Integer;
begin
  CleanConsole;
  Writeln('Menu Locações');
  Writeln(OPTIONS_CRUD);
  Write(Output, 'Opção: ');
  Readln(Input, LOption);

  case TOptionsCrud(LOption) of
    ocCreate: ;
    ocRead: ;
    ocUpdate: ;
    ocDelete: ;
    ocExit: Menu;
    else
    begin
      writeln('Opção inválida');
      readln;
    end;
  end;
  Sleep(2000);
end;

end.
